{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/profile/edit-profile/edit-profile.component.css","webpack:///./src/app/dashboard/profile/edit-profile/edit-profile.component.html","webpack:///./src/app/dashboard/profile/edit-profile/edit-profile.component.ts","webpack:///./src/app/dashboard/profile/profile.component.css","webpack:///./src/app/dashboard/profile/profile.component.html","webpack:///./src/app/dashboard/profile/profile.component.ts","webpack:///./src/app/frontpage/login/login.component.css","webpack:///./src/app/frontpage/login/login.component.html","webpack:///./src/app/frontpage/login/login.component.ts","webpack:///./src/app/frontpage/signup/signup.component.css","webpack:///./src/app/frontpage/signup/signup.component.html","webpack:///./src/app/frontpage/signup/signup.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/routing.module.ts","webpack:///./src/app/services/drive_rides.service.ts","webpack:///./src/app/services/notification.service.ts","webpack:///./src/app/services/reputation.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* #container {\\n    display: flex; \\n    flex-direction: row;\\n    justify-content: flex-start;\\n    align-items: center;}\\n.child {\\n    width: 200px;\\n    height: 200px; }\\n#child1 {\\n    background-color: red; }\\n#child2 {\\n    background-color: green; }\\n#child3 {\\n    background-color: blue; } */\\n\\nmat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n    height: 100%;\\n}\\n\\nmat-sidenav {\\n    width: 250px;\\n}\\n\\na {\\n    color:white;\\n    text-decoration: none;\\n}\\n\\na:hover, a:active {\\n    color: lightgray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Z0NBYWdDOztBQUVoQztJQUNJLGFBQWE7Q0FDaEI7O0FBQ0Q7SUFDSSxhQUFhO0NBQ2hCOztBQUVEO0lBQ0ksWUFBWTtJQUNaLHNCQUFzQjtDQUN6Qjs7QUFDRDtJQUNJLGlCQUFpQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogI2NvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDsgXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjt9XG4uY2hpbGQge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDIwMHB4OyB9XG4jY2hpbGQxIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7IH1cbiNjaGlsZDIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuOyB9XG4jY2hpbGQzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOyB9ICovXG5cbm1hdC1zaWRlbmF2LWNvbnRhaW5lciwgbWF0LXNpZGVuYXYtY29udGVudCwgbWF0LXNpZGVuYXYge1xuICAgIGhlaWdodDogMTAwJTtcbn1cbm1hdC1zaWRlbmF2IHtcbiAgICB3aWR0aDogMjUwcHg7XG59XG5cbmEge1xuICAgIGNvbG9yOndoaXRlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbmE6aG92ZXIsIGE6YWN0aXZlIHtcbiAgICBjb2xvcjogbGlnaHRncmF5O1xufSJdfQ== */\"","module.exports = \"\\n<mat-sidenav-container>\\n\\n      <mat-sidenav #sidenav opened=\\\"false\\\" >\\n          <mat-nav-list>\\n      \\n            <a *ngIf=\\\"loggedIn\\\" mat-list-item routerLink=\\\"profile\\\" (click)=\\\"myProfile(); sidenav.close()\\\">\\n              <mat-icon>person</mat-icon>\\n              My Profile\\n            </a>\\n            <a *ngIf=\\\"loggedIn\\\" mat-list-item routerLink=\\\"/\\\" (click)=\\\"sidenav.close(); signOut()\\\">\\n              <mat-icon>exit_to_app</mat-icon>\\n              Sing out\\n            </a>\\n          </mat-nav-list>\\n        </mat-sidenav>\\n        <mat-sidenav-content>\\n          <mat-toolbar color=\\\"primary\\\" *ngIf=\\\"loggedIn\\\">\\n              <div fxHide.gt-xs>\\n                <button mat-raised-button color=\\\"accent\\\" (click)=\\\"sidenav.toggle()\\\">\\n                  <mat-icon>menu</mat-icon>\\n                </button>\\n              </div>\\n              \\n              <div fxFlex fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"15px\\\" fxHide.xs>\\n    \\n               <div  [matMenuTriggerFor]=\\\"menu\\\" >\\n                  <a href=\\\"javascript:;\\\" fxLayoutAlign=\\\"center center\\\">\\n                      {{this.userService.getCurrenSession().contact_email}}\\n                  <mat-icon>expand_more</mat-icon>\\n                  </a>\\n                </div>\\n                <mat-menu #menu=\\\"matMenu\\\">\\n                  <button mat-menu-item routerLink=\\\"/profile\\\" (click)=\\\"myProfile()\\\">My Profile</button>\\n                  <button mat-menu-item routerLink=\\\"/\\\" (click)=\\\"signOut()\\\">Sign Out</button>\\n                </mat-menu>\\n              </div>\\n          </mat-toolbar>\\n \\n   <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n    \\n  </mat-sidenav-container>\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { UsersService } from './services/users.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'angular-app';\n  loggedIn : boolean = false;\n\n  constructor(private userService : UsersService, private router: Router,){}\n\n  setLoggedIn( value : boolean){\n    this.loggedIn = value;\n  }\n  \n  signOut(){\n    this.loggedIn = false;\n  }\n  myProfile(){\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/profile\"]));\n  }\n  \n\n\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppComponent } from './app.component';\n\nimport { MaterialModule } from './material.module';\nimport { RoutingModule } from './routing.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './frontpage/login/login.component';\nimport { SignupComponent } from './frontpage/signup/signup.component';\n\n\nimport { ProfileComponent } from './dashboard/profile/profile.component';\n\nimport { UsersService } from './services/users.service';\nimport { NotificationsService } from './services/notification.service';\nimport { ReputationService } from './services/reputation.service';\nimport { DriveRidesService } from './services/drive_rides.service';\nimport { EditProfileComponent } from './dashboard/profile/edit-profile/edit-profile.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    ProfileComponent,\n    EditProfileComponent\n  ],\n  imports: [\n    BrowserModule, \n    MaterialModule, \n    RoutingModule,\n    BrowserAnimationsModule, \n    FlexLayoutModule,\n    FormsModule,\n  ],\n  providers: [UsersService, ReputationService, DriveRidesService, NotificationsService],\n  bootstrap: [AppComponent],\n  entryComponents : [\n    EditProfileComponent\n  ] \n})\n\n\nexport class AppModule {}\n","module.exports = \".alert{\\n    color: #721c24;\\n    background-color: #f8d7da;\\n    border-color: #f5c6cb;\\n    position: relative;\\n    padding: .75rem 1.25rem;\\n    margin-bottom: 1rem;\\n    border: 1px solid transparent;\\n    border-top-color: transparent;\\n    border-right-color: transparent;\\n    border-bottom-color: transparent;\\n    border-left-color: transparent;\\n    border-radius: .25rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL3Byb2ZpbGUvZWRpdC1wcm9maWxlL2VkaXQtcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLDBCQUEwQjtJQUMxQixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsOEJBQThCO0lBQzlCLDhCQUE4QjtJQUM5QixnQ0FBZ0M7SUFDaEMsaUNBQWlDO0lBQ2pDLCtCQUErQjtJQUMvQixzQkFBc0I7Q0FDekIiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvcHJvZmlsZS9lZGl0LXByb2ZpbGUvZWRpdC1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnR7XG4gICAgY29sb3I6ICM3MjFjMjQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZDdkYTtcbiAgICBib3JkZXItY29sb3I6ICNmNWM2Y2I7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IC43NXJlbSAxLjI1cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xufVxuIl19 */\"","module.exports = \"<mat-dialog-content>\\n    <section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">        \\n            <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"\\n            #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n\\n        <!---------------------------------------------------------------------------------------------------------------------------------------->\\n        \\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>First Name</mat-label>\\n                <input type=\\\"text\\\" pattern=\\\"[A-Z]{1}[a-z]{2,20}\\\" matInput placeholder=\\\"First name\\\" [(ngModel)]=\\\"currentUser.fname\\\" name=\\\"firstName\\\" required #firstNameInput=\\\"ngModel\\\" > \\n                <mat-error *ngIf=\\\"firstNameInput.hasError('required')\\\">Please write Your first name.</mat-error>\\n                <mat-error *ngIf=\\\"!firstNameInput.hasError('required')\\\">First lether should be capital letter followed by at least 2 words</mat-error>\\n              </mat-form-field>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                  <mat-label>Last Name</mat-label>\\n                <input type=\\\"text\\\" pattern=\\\"[A-Z]{1}[a-z]{2,20}\\\" matInput placeholder=\\\"Last name\\\" [(ngModel)]=\\\"currentUser.lname\\\" name=\\\"lastName\\\" required #lastNameInput=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"lastNameInput.hasError('required')\\\">Please write Your last name.</mat-error>\\n                <mat-error *ngIf=\\\"!lastNameInput.hasError('required')\\\">First lether should be capital letter followed by at least 2 words</mat-error>\\n              </mat-form-field>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                  <mat-label>Mobile Phone Number</mat-label>\\n                <input type=\\\"tel\\\" pattern=\\\"[0]{1}[0-9]{9}\\\" matInput placeholder=\\\"Mobile phone number\\\" [(ngModel)]=\\\"currentUser.contact_phone\\\" name=\\\"phone\\\" required #phoneInput=\\\"ngModel\\\" minlength=\\\"6\\\">\\n                <mat-error *ngIf=\\\"phoneInput.hasError('required')\\\">Please write Your mobile number.</mat-error>\\n                <mat-error *ngIf=\\\"!phoneInput.hasError('required')\\\">Phone number should start with 0 followed by 9 digits afterwards</mat-error>\\n              </mat-form-field>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n              <mat-form-field appearance=\\\"outline\\\">\\n                  <mat-label>Address</mat-label>\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"currentUser.contact_address\\\" name=\\\"address\\\" required #adressInput=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"adressInput.hasError('required')\\\">Please write Your full address.</mat-error>\\n              </mat-form-field>\\n        \\n        <!---------------------------------------------------------------------------------------------------------------------------------------->\\n            <mat-form-field appearance=\\\"outline\\\" hintLabel=\\\"This will be used for signing in.\\\">\\n                <mat-label>Email Address</mat-label>\\n                <input type=\\\"email\\\" matInput placeholder=\\\"Your email\\\" [(ngModel)]=\\\"currentUser.contact_email\\\" name=\\\"email\\\" email required #emailInput=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Please write Your email address.</mat-error>\\n                <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Please use the correct email format.</mat-error>\\n              </mat-form-field>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n              <mat-form-field appearance=\\\"outline\\\" hintLabel=\\\"Please enter minimum 6 characters.\\\">\\n                <mat-label>Your password</mat-label>\\n                <input type=\\\"password\\\" matInput placeholder ngModel name=\\\"password\\\" [(ngModel)]=\\\"currentUser.password\\\" required minlength=\\\"6\\\" #passInput=\\\"ngModel\\\">\\n                <mat-hint align=\\\"end\\\">{{ passInput.value?.length }} /6 </mat-hint>\\n                <mat-error *ngIf=\\\"passInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n                <mat-error *ngIf=\\\"!passInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n              </mat-form-field>\\n          \\n          <div class=\\\"alert\\\" *ngIf=\\\"errorString !=''\\\">{{ errorString }}</div>\\n          <!---------------------------------------------------------------------------------------------------------------------------------------->\\n          <div fxLayoutGap=\\\"20px\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" > \\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onCancel()\\\">\\n                  Cancel\\n                </button>\\n              <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\">\\n                EDIT\\n              </button>\\n          </div>\\n            </form>\\n        \\n    \\n      </section>\\n\\n\\n\\n</mat-dialog-content>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport {FormBuilder, FormGroup, Validators,NgForm } from '@angular/forms';\nimport {UsersService} from '../../../services/users.service';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n  private currentUser;\n  private errorString : string = \"\";\n  private userTEMP;\n\n  constructor( private dialogRef: MatDialogRef<EditProfileComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private userService : UsersService,) {\n    this.userTEMP  = userService.getProfileData(data.userid);\n    this.currentUser = {id_user         : -1,\n      fname           : \"\",\n      lname           :\"\",\n      contact_email   : \"\",\n      contact_phone   :\"\",\n      contact_address :\"\",\n      password        :\"\"\n     \n    };\n    Object.keys(this.userTEMP).forEach(key=>this.currentUser[key]=this.userTEMP[key]);\n  }\n\n   \n  ngOnInit() {\n  }\n\n  onCancel(){\n    this.dialogRef.close();\n  }\n  onSubmit(form : NgForm) {\n    Object.keys(this.currentUser).forEach(key=>this.userTEMP[key]=this.currentUser[key]);\n    this.onCancel();\n  }\n\n}\n","module.exports = \".width-500px{\\n    width: 500px;\\n    max-width: 500px;\\n}\\n\\n.green-text{\\n    color: #009933;\\n}\\n\\n.red-text{\\n    color: #990000;\\n}\\n\\n.gray-text{\\n    color:#424040;\\n}\\n\\n.sectionClass{\\n    margin-top: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtDQUNwQjs7QUFFRDtJQUNJLGVBQWU7Q0FDbEI7O0FBQ0Q7SUFDSSxlQUFlO0NBQ2xCOztBQUNEO0lBQ0ksY0FBYztDQUNqQjs7QUFFRDtJQUNJLGlCQUFpQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53aWR0aC01MDBweHtcbiAgICB3aWR0aDogNTAwcHg7XG4gICAgbWF4LXdpZHRoOiA1MDBweDtcbn1cblxuLmdyZWVuLXRleHR7XG4gICAgY29sb3I6ICMwMDk5MzM7XG59XG4ucmVkLXRleHR7XG4gICAgY29sb3I6ICM5OTAwMDA7XG59XG4uZ3JheS10ZXh0e1xuICAgIGNvbG9yOiM0MjQwNDA7XG59XG5cbi5zZWN0aW9uQ2xhc3N7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbn0iXX0= */\"","module.exports = \"<section  fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"column\\\" class=\\\"sectionClass\\\">\\n  <mat-card>\\n      <mat-card-header fxLayoutGap=\\\"100px\\\" >\\n          <div mat-card-avatar ><img mat-card-image src={{imgSRC}} class=\\\"resize-img\\\"/></div>\\n          <mat-card-title>{{userToShow.fname }} {{userToShow.lname }}</mat-card-title>\\n          <mat-card-subtitle>Customer</mat-card-subtitle>\\n       </mat-card-header>\\n       <mat-card-content>\\n          <button *ngIf=\\\"userIDtoShow == userService.getCurrenSession().id_user\\\" mat-stroked-button color=\\\"primary\\\"  (click)=\\\"editProfile()\\\">Edit</button>\\n          <mat-list >\\n              <mat-divider></mat-divider>\\n              <mat-list-item><mat-icon>star_rate</mat-icon>Raiting</mat-list-item>\\n              <mat-list-item class=\\\"green-text\\\">Positive {{repData?.rep_positive}}</mat-list-item>\\n              <mat-list-item class=\\\"red-text\\\">Negative {{repData?.rep_negative}}</mat-list-item>\\n              <mat-divider></mat-divider>\\n              \\n              <mat-list-item><mat-icon>mail_outline</mat-icon>Email:</mat-list-item>\\n              <p class=\\\"gray-text\\\" fxLayoutGap=\\\"100px\\\" fxLayoutAlign=\\\"center center\\\">{{userToShow.contact_email}}</p>\\n              <mat-divider></mat-divider>\\n              <mat-list-item><mat-icon>phone</mat-icon>Phone: </mat-list-item>\\n              <p class=\\\"gray-text\\\" fxLayoutGap=\\\"100px\\\" fxLayoutAlign=\\\"center center\\\">{{userToShow.contact_phone}}</p>\\n              <mat-divider></mat-divider>\\n              <mat-list-item><mat-icon>home</mat-icon>Address: </mat-list-item>\\n              <p class=\\\"gray-text\\\" fxLayoutGap=\\\"100px\\\" fxLayoutAlign=\\\"center center\\\">{{userToShow.contact_address}}</p>\\n            </mat-list>\\n       </mat-card-content> \\n\\n\\n       <h4>REVIEWS</h4>\\n       <div *ngIf=\\\"repData.rep_comment\\\">\\n       <div fxLayoutAlign=\\\"flex-start\\\" fxLayoutAlign=\\\"flex-start\\\"  role=\\\"list\\\" *ngFor=\\\"let item of repData.rep_comment; index as i;\\\">\\n          <mat-card>\\n              <mat-card-header fxLayoutGap=\\\"100px\\\" >\\n                  <a [routerLink]=\\\"['/profile']\\\" [queryParams]=\\\"{userID: item.id_user_from}\\\" (click)=\\\"reloadComponent(item.id_user_from)\\\">\\n                  {{userService.getProfileData(item.id_user_from).fname }} {{userService.getProfileData(item.id_user_from).lname }}\\n                </a>\\n                </mat-card-header>\\n                <mat-card-content>\\n                    {{item.comment}}\\n                </mat-card-content>\\n          </mat-card>\\n       </div>\\n    </div>\\n      </mat-card>\\n</section>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../../app.component';\nimport { UsersService } from '../../services/users.service';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { UsersModel } from '../../services/models/user.model';\nimport { ReputationService } from '../../services/reputation.service';\nimport {ReputationModel} from '../../services/models/reputation.model';\nimport { MatDialog } from '@angular/material';\n\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  userIDtoShow : number = -1;\n  userToShow :UsersModel | any;\n  imgSRC : string;\n  repData : ReputationModel;\n\n  constructor(private userService : UsersService,\n    private appComponent : AppComponent,\n    private router: Router,\n    private route: ActivatedRoute,\n    private repService: ReputationService,\n    public dialog: MatDialog,\n    ) {\n      let urlParse = this.router.url.split(\"=\");\n      if( typeof urlParse[1] != 'undefined' || urlParse[1] != null ){\n        this.userIDtoShow = Number(urlParse[1]);\n      }\n      if (this.userIDtoShow == -1 ){\n        this.userIDtoShow = userService.getCurrenSession().id_user;\n      }\n\n  this.userToShow = userService.getProfileData(this.userIDtoShow);\n  this.imgSRC = \"https://robohash.org/\"+this.userToShow.fname+\".png\";\n\n  this.repData = repService.getReputationOfOneUser(this.userIDtoShow);  \n   }\n\n  ngOnInit() {\n  }\n\n  editProfile(){\n    this.dialog.open(EditProfileComponent, {data: { userid: this.userIDtoShow }},);\n  }\n\n  reloadComponent(id){\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n    this.router.navigate([\"/profile\", {userID: id} ]));\n  }\n\n}\n","module.exports = \"mat-form-field {\\n    width: 300px;\\n}\\nh1{\\n    margin-bottom: 20px;\\n}\\nsection{\\n    height:30%;\\n    width:50%;\\n\\t\\n\\ttop:0;\\n\\tbottom: 0;\\n\\tleft: 0;\\n\\tright: 0;\\n\\tmargin: auto;\\n}\\nimg{\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n    position: static;\\n    width: 33%;\\n    height: 33%;\\n    -o-object-fit: fill;\\n       object-fit: fill;\\n}\\n.alert{\\n    color: #721c24;\\n    background-color: #f8d7da;\\n    border-color: #f5c6cb;\\n    position: relative;\\n    padding: .75rem 1.25rem;\\n    margin-bottom: 1rem;\\n    border: 1px solid transparent;\\n    border-top-color: transparent;\\n    border-right-color: transparent;\\n    border-bottom-color: transparent;\\n    border-left-color: transparent;\\n    border-radius: .25rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRwYWdlL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0NBQ2hCO0FBQ0Q7SUFDSSxvQkFBb0I7Q0FDdkI7QUFDRDtJQUNJLFdBQVc7SUFDWCxVQUFVOztDQUViLE1BQU07Q0FDTixVQUFVO0NBQ1YsUUFBUTtDQUNSLFNBQVM7Q0FDVCxhQUFhO0NBQ2I7QUFDRDtJQUNJLGlCQUFpQjtJQUNqQixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxZQUFZO0lBQ1osb0JBQWlCO09BQWpCLGlCQUFpQjtDQUNwQjtBQUVEO0lBQ0ksZUFBZTtJQUNmLDBCQUEwQjtJQUMxQixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsOEJBQThCO0lBQzlCLDhCQUE4QjtJQUM5QixnQ0FBZ0M7SUFDaEMsaUNBQWlDO0lBQ2pDLCtCQUErQjtJQUMvQixzQkFBc0I7Q0FDekIiLCJmaWxlIjoic3JjL2FwcC9mcm9udHBhZ2UvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMzAwcHg7XG59XG5oMXtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuc2VjdGlvbntcbiAgICBoZWlnaHQ6MzAlO1xuICAgIHdpZHRoOjUwJTtcblx0XG5cdHRvcDowO1xuXHRib3R0b206IDA7XG5cdGxlZnQ6IDA7XG5cdHJpZ2h0OiAwO1xuXHRtYXJnaW46IGF1dG87XG59XG5pbWd7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgd2lkdGg6IDMzJTtcbiAgICBoZWlnaHQ6IDMzJTtcbiAgICBvYmplY3QtZml0OiBmaWxsO1xufVxuXG4uYWxlcnR7XG4gICAgY29sb3I6ICM3MjFjMjQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZDdkYTtcbiAgICBib3JkZXItY29sb3I6ICNmNWM2Y2I7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IC43NXJlbSAxLjI1cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xufVxuIl19 */\"","module.exports = \"<section>\\n  <div  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <img src=\\\"/assets/loginbackground.jpg\\\"/>\\n  </div>\\n  \\n  <h1 fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\"  fxLayoutAlign=\\\"center center\\\">LOGIN page</h1>\\n  <form fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n  <mat-form-field>\\n    <input type=\\\"email\\\" matInput placeholder=\\\"Your email\\\" ngModel name=\\\"email\\\" email required #emailInput=\\\"ngModel\\\">\\n    <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Field should not be left empty.</mat-error>\\n    <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Please provide correct email format.</mat-error>\\n  </mat-form-field>\\n  <mat-form-field appearance=\\\"standard\\\"  hintLabel=\\\"Please provide minimum 6 characters.\\\">\\n    <input [(ngModel)]=password type=\\\"password\\\" matInput placeholder=\\\"Your password\\\" ngModel name=\\\"password\\\" required minlength=\\\"6\\\" #pwdInput=\\\"ngModel\\\">\\n    <mat-label>Your password</mat-label>\\n    <mat-hint align=\\\"end\\\">{{ pwdInput.value?.length }} / 6</mat-hint>\\n    <mat-error *ngIf=\\\"pwdInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n        <mat-error *ngIf=\\\"!pwdInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n  </mat-form-field> \\n  <div class=\\\"alert\\\" *ngIf=\\\"errorString !=''\\\">{{ errorString }}</div>\\n  <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\">Login</button>\\n  </form> \\n\\n  \\n  \\n  <p fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center center\\\">\\n    Don't have an account\\n     <a routerLink=\\\"/signup\\\" >\\n      Consider registering here!\\n     </a></p> \\n  \\n  </section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AppComponent } from '../../app.component';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  errorString : string = \"\";\n\n constructor(private userService : UsersService, private appComponent : AppComponent,  private router: Router,) { \n }\n\n  ngOnInit() {\n  }\n\nonSubmit (form : NgForm) {\n    if (this.userService.validateLogin(form.value.email , form.value.password)){\n      this.appComponent.setLoggedIn(true);\n      this.errorString = \"\";\n      //___________________________________________ reddirect\n      if( this.userService.getCurrenSession().id_user != -1){\n        let reddirect_path = \"/\";\n        if(this.userService.getCurrenSession().acc_type == \"driver\"){\n         reddirect_path = \"/view-current-rides\";\n        } else { reddirect_path = \"/search-active-rides\"; }\n       this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n       this.router.navigate([reddirect_path]));\n      }\n      //___________________________________________ reddirect end\n    } else{\n      this.errorString = \"Invalid email and/or password provided!\";\n    }\n}\n    \n}\n","module.exports = \"mat-form-field {\\n    width: 300px;\\n}\\n\\nh1{\\n    margin-bottom: 20px;\\n}\\n\\nsection{\\n    height:30%;\\n    width:50%;\\n\\t\\n\\ttop:0;\\n\\tbottom: 0;\\n\\tleft: 0;\\n\\tright: 0;\\n\\tmargin: auto;\\n}\\n\\nimg{\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n    position: static;\\n    width: 33%;\\n    height: 33%;\\n    -o-object-fit: fill;\\n       object-fit: fill;\\n}\\n\\n.alert{\\n    color: #721c24;\\n    background-color: #f8d7da;\\n    border-color: #f5c6cb;\\n    position: relative;\\n    padding: .75rem 1.25rem;\\n    margin-bottom: 1rem;\\n    border: 1px solid transparent;\\n    border-top-color: transparent;\\n    border-right-color: transparent;\\n    border-bottom-color: transparent;\\n    border-left-color: transparent;\\n    border-radius: .25rem;\\n}\\n\\n.section-css{\\n    margin-top: 50px;\\n}\\n\\n.pClass{\\n    margin-bottom: 100px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRwYWdlL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7Q0FDaEI7O0FBRUQ7SUFDSSxvQkFBb0I7Q0FDdkI7O0FBRUQ7SUFDSSxXQUFXO0lBQ1gsVUFBVTs7Q0FFYixNQUFNO0NBQ04sVUFBVTtDQUNWLFFBQVE7Q0FDUixTQUFTO0NBQ1QsYUFBYTtDQUNiOztBQUNEO0lBQ0ksaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsV0FBVztJQUNYLFlBQVk7SUFDWixvQkFBaUI7T0FBakIsaUJBQWlCO0NBQ3BCOztBQUVEO0lBQ0ksZUFBZTtJQUNmLDBCQUEwQjtJQUMxQixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsOEJBQThCO0lBQzlCLDhCQUE4QjtJQUM5QixnQ0FBZ0M7SUFDaEMsaUNBQWlDO0lBQ2pDLCtCQUErQjtJQUMvQixzQkFBc0I7Q0FDekI7O0FBQ0Q7SUFDSSxpQkFBaUI7Q0FDcEI7O0FBQ0Q7SUFDSSxxQkFBcUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9mcm9udHBhZ2Uvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiAzMDBweDtcbn1cblxuaDF7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuc2VjdGlvbntcbiAgICBoZWlnaHQ6MzAlO1xuICAgIHdpZHRoOjUwJTtcblx0XG5cdHRvcDowO1xuXHRib3R0b206IDA7XG5cdGxlZnQ6IDA7XG5cdHJpZ2h0OiAwO1xuXHRtYXJnaW46IGF1dG87XG59XG5pbWd7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgd2lkdGg6IDMzJTtcbiAgICBoZWlnaHQ6IDMzJTtcbiAgICBvYmplY3QtZml0OiBmaWxsO1xufVxuXG4uYWxlcnR7XG4gICAgY29sb3I6ICM3MjFjMjQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZDdkYTtcbiAgICBib3JkZXItY29sb3I6ICNmNWM2Y2I7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IC43NXJlbSAxLjI1cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xufVxuLnNlY3Rpb24tY3Nze1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG59XG4ucENsYXNze1xuICAgIG1hcmdpbi1ib3R0b206IDEwMHB4O1xufVxuIl19 */\"","module.exports = \"<section class=\\\"section-css\\\">\\n    <div  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        <img src=\\\"/assets/registerImage.jpg\\\"/>\\n    </div>\\n    <h1 fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\"  fxLayoutAlign=\\\"center center\\\">REGISTRATION page</h1>\\n\\n    <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"\\n    #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <!---------------------------------------------------------------------------------------------------------------------------------------->\\n  \\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n\\n    <mat-form-field>\\n        <input type=\\\"text\\\" pattern=\\\"[A-Z]{1}[a-z]{2,20}\\\" matInput placeholder=\\\"First name\\\" ngModel name=\\\"firstName\\\" required #firstNameInput=\\\"ngModel\\\" > \\n        <mat-error *ngIf=\\\"firstNameInput.hasError('required')\\\">Please write Your first name.</mat-error>\\n        <mat-error *ngIf=\\\"!firstNameInput.hasError('required')\\\">First lether should be capital letter followed by at least 2 words</mat-error>\\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <mat-form-field>\\n        <input type=\\\"text\\\" pattern=\\\"[A-Z]{1}[a-z]{2,20}\\\" matInput placeholder=\\\"Last name\\\" ngModel name=\\\"lastName\\\" required #lastNameInput=\\\"ngModel\\\">\\n        <mat-error *ngIf=\\\"lastNameInput.hasError('required')\\\">Please write Your last name.</mat-error>\\n        <mat-error *ngIf=\\\"!lastNameInput.hasError('required')\\\">First lether should be capital letter followed by at least 2 words</mat-error>\\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <mat-form-field>\\n        <input type=\\\"tel\\\" pattern=\\\"[0]{1}[0-9]{9}\\\" matInput placeholder=\\\"Mobile phone number\\\" ngModel name=\\\"phone\\\" required #phoneInput=\\\"ngModel\\\" minlength=\\\"6\\\">\\n        <mat-error *ngIf=\\\"phoneInput.hasError('required')\\\">Please write Your mobile number.</mat-error>\\n        <mat-error *ngIf=\\\"!phoneInput.hasError('required')\\\">Phone number should start with 0 followed by 9 digits afterwards</mat-error>\\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <mat-form-field>\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Address\\\" ngModel name=\\\"address\\\" required #adressInput=\\\"ngModel\\\">\\n        <mat-error *ngIf=\\\"adressInput.hasError('required')\\\">Please write Your full address.</mat-error>\\n      </mat-form-field>\\n\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\n    <!-- <font *ngIf=\\\"emailInUse\\\" color=\\\"red\\\">Email already in use. Please enter another email address!</font> -->\\n    <mat-form-field hintLabel=\\\"This will be used for signing in.\\\">\\n        <input type=\\\"email\\\" matInput placeholder=\\\"Your email\\\" ngModel name=\\\"email\\\" email required #emailInput=\\\"ngModel\\\">\\n        <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Please write Your email address.</mat-error>\\n        <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Please use the correct email format.</mat-error>\\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <mat-form-field appearance=\\\"standard\\\" hintLabel=\\\"Please enter minimum 6 characters.\\\">\\n        <mat-label>Your password</mat-label>\\n        <input type=\\\"password\\\" matInput placeholder ngModel name=\\\"password\\\" [(ngModel)]=password required minlength=\\\"6\\\" #passInput=\\\"ngModel\\\">\\n        <mat-hint align=\\\"end\\\">{{ passInput.value?.length }} /6 </mat-hint>\\n        <mat-error *ngIf=\\\"passInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n        <mat-error *ngIf=\\\"!passInput.hasError('required')\\\">Please enter minimum 6 characters.</mat-error> \\n      </mat-form-field>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n      <mat-checkbox color=\\\"primary\\\" ngModel name=\\\"acceptance\\\" required></mat-checkbox>\\n      <!-- I accept the <font face=\\\"verdana\\\" color=\\\"blue\\\" (click)=\\\"onTos()\\\"><u>terms and conditions</u></font> of use. -->\\n      I accept the <a href=\\\"javascript:;\\\" (click)=\\\"onTos()\\\">terms and conditions</a> of use.\\n    </div>\\n  \\n  <div class=\\\"alert\\\" *ngIf=\\\"errorString !=''\\\">{{ errorString }}</div>\\n  <!---------------------------------------------------------------------------------------------------------------------------------------->\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\">\\n        Sign up!\\n      </button>\\n    </form>\\n\\n\\n<p fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pClass\\\">\\n    Already have an account?\\n     <a routerLink=\\\"/\\\" >\\n      Consider to login here!\\n     </a></p> \\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AppComponent } from '../../app.component';\nimport { UsersService } from '../../services/users.service';\nimport { ReputationService } from '../../services/reputation.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  errorString : string = \"\";\n\n  constructor(private router : Router,private userService : UsersService, private appComponent : AppComponent, private repService : ReputationService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form : NgForm) {\n    if(!this.userService.doesEmailExists(form.value.email)){\n      let newID = this.userService.addUser(\n        form.value.firstName,\n        form.value.lastName,\n          form.value.email,\n          form.value.phone,\n          form.value.address,\n          form.value.password,\n          form.value.typeOfUser\n        );\n      this.errorString = \"\";\n      this.appComponent.setLoggedIn(true);\n      this.userService.validateLogin(form.value.email,form.value.password );\n      this.repService.initReputation(newID);\n\n      //___________________________________________ reddirect\n      if( this.userService.getCurrenSession().id_user != -1){\n        let reddirect_path = \"/\";\n        if(this.userService.getCurrenSession().acc_type == \"driver\"){\n         reddirect_path = \"/view-current-rides\";\n        } else { reddirect_path = \"/search-active-rides\"; }\n       this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n       this.router.navigate([reddirect_path]));\n      }\n      //___________________________________________ reddirect end\n\n    } else{\n      this.errorString = \"This email already exist!\";\n      }\n  }\n}\n","/* Modul za registraciju Angular Material komponenti */\n\nimport { NgModule } from '../../node_modules/@angular/core';\nimport { MatButtonModule, \n         MatIconModule,\n         MatFormFieldModule, \n         MatInputModule, \n         MatDatepickerModule,\n         MatNativeDateModule, \n         MatCheckboxModule, \n         MatSidenavModule, \n         MatToolbarModule,\n         MatListModule,\n         MatTabsModule, \n         MatCardModule,\n         MatSelectModule,\n         MatProgressSpinnerModule,\n         MatTableModule,\n         MatSortModule,\n         MatPaginatorModule,\n         MatRadioModule,\n         MatMenuModule,\n         MatDividerModule,\n         MatDialogModule,\n         MatSnackBarModule,\n         MatSlideToggleModule\n         \n        } from '@angular/material';\n\nconst matModules = [\n        MatButtonModule, \n        MatIconModule, \n        MatFormFieldModule, \n        MatInputModule, \n        MatDatepickerModule, \n        MatNativeDateModule, \n        MatCheckboxModule, \n        MatSidenavModule,\n        MatToolbarModule,\n        MatListModule,\n        MatTabsModule,\n        MatCardModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatRadioModule,\n        MatMenuModule,\n        MatDividerModule,\n        MatDialogModule,\n        MatSnackBarModule,\n        MatSlideToggleModule\n        ]\n\n@NgModule ({\nimports: [...matModules ],\nexports: [ ...matModules ]\n})\n\nexport class MaterialModule {}\n\n","import { NgModule } from '../../node_modules/@angular/core';\nimport {Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './frontpage/login/login.component';\nimport { SignupComponent } from './frontpage/signup/signup.component';\nimport { ProfileComponent } from './dashboard/profile/profile.component';\n\nconst rute: Routes = [\n{path : '',                     component: LoginComponent ,pathMatch: 'full' },\n{path : 'signup',               component: SignupComponent },\n{path : 'profile',              component: ProfileComponent }\n];\n\n@NgModule ({\n\n    imports: [RouterModule.forRoot(rute)],\n    exports: [RouterModule]\n\n})\n\nexport class RoutingModule {}\n","import { DriveRidesModel } from './models/drive-rides.model';\nimport { DriveRidesStopsModel } from './models/drive-rides.model';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class DriveRidesService {\n    private driveRideList : Array<DriveRidesModel> = [\n        {\n            id_drive_rides  : 1,\n            id_driver       : 2,\n            name            : \"drive1\",\n            start_location  : \"start loc1\",\n            end_location    : \"end loc 1\",\n            departure_time  : \"10:30\",\n            start_time      : \"10:30\",\n            end_time        : \"11:30\",\n            drive_ride_status :  'ongoing',\n            passengers_limit  : 5,\n            current_passengers_number : 2,\n            current_passengers_data : [\n                {id_user : 1},\n                {id_user : 3}\n            ],\n            drive_ride_stops        : [\n                {stop_name : \"stop1\"},\n                {stop_name : \"stop2\"}\n            ],\n            date : new Date()\n        } ,\n        {\n            id_drive_rides  : 2,\n            id_driver       : 2,\n            name            : \"drive2\",\n            start_location  : \"start loc2\",\n            end_location    : \"end loc 2\",\n            departure_time  : \"12:30\",\n            start_time      : \"12:30\",\n            end_time        : \"13:30\",\n            drive_ride_status :  'finished',\n            passengers_limit  : 5,\n            current_passengers_number : 1,\n            current_passengers_data : [\n                {id_user : 1}\n            ],\n            drive_ride_stops        : [\n                {stop_name : \"stop1\"},\n                {stop_name : \"stop2\"}\n            ],\n            date : new Date()\n        },{\n            id_drive_rides  : 3,\n            id_driver       : 2,\n            name            : \"drive3\",\n            start_location  : \"start loc2\",\n            end_location    : \"end loc 2\",\n            departure_time  : \"01:30\",\n            start_time      : \"03:30\",\n            end_time        : \"03:30\",\n            drive_ride_status :  'ongoing',\n            passengers_limit  : 5,\n            current_passengers_number : 0,\n            current_passengers_data : [],\n            drive_ride_stops        : [\n                {stop_name : \"stop1\"},\n                {stop_name : \"stop2\"}\n            ],\n            date : new Date()\n        }\n    ]\n\n    setDriveRide(\n        id_driver       : number,\n        name            : string,\n        start_location  : string,\n        end_location    : string,\n        start_time      : string,\n        end_time        : string,\n        passengers_limit  : number,\n        date  : Date,\n        drive_ride_stops        : Array<DriveRidesStopsModel>,\n        ){\n            \n        const newID =  this.driveRideList[this.driveRideList.length - 1].id_drive_rides + 1;\n\n        this.driveRideList.push({\n            id_drive_rides  : newID,\n            id_driver       : id_driver,\n            name            : name,\n            start_location  : start_location,\n            end_location    : end_location,\n            departure_time  : \"\",\n            start_time      : start_time,\n            end_time        : end_time,\n            drive_ride_status :   'ongoing',\n            passengers_limit  : passengers_limit,\n            current_passengers_number : 0,\n            current_passengers_data : [],\n            drive_ride_stops        : drive_ride_stops,\n            date  : date\n        })\n    }\n\n    getDriverRides(id_driver){\n        let driveRideList2 : Array<DriveRidesModel> = []\n        for (var i=0 ; i < this.driveRideList.length ; i++){\n            if (this.driveRideList[i][\"id_driver\"] == id_driver) {\n                driveRideList2.push(this.driveRideList[i]);\n            }\n        }\n    return driveRideList2;\n    }\n\n    getUniqueRide(id_ride:number){\n        for (var i=0 ; i < this.driveRideList.length ; i++){\n            if (this.driveRideList[i][\"id_drive_rides\"] == id_ride) {\n                return this.driveRideList[i];\n            }\n        }\n    }\n\n    removeUniqueRide(id_ride:number){\n        let filtered = this.driveRideList.filter(function(el) { return el.id_drive_rides != id_ride; }); \n        this.driveRideList = filtered;\n    }\n\n    getPassengersArray(id_drive:number){\n        for (var i=0 ; i < this.driveRideList.length ; i++){\n            if (this.driveRideList[i][\"id_drive_rides\"] == id_drive) {\n                return this.driveRideList[i][\"current_passengers_data\"];\n            }\n        }\n    }\n\n    getStopsArray(id_drive:number){\n        for (var i=0 ; i < this.driveRideList.length ; i++){\n            if (this.driveRideList[i][\"id_drive_rides\"] == id_drive) {\n                return this.driveRideList[i][\"drive_ride_stops\"];\n            }\n        }\n    }\n\n    getOngoingDrives(){\n        let returnDriveRideList : Array<DriveRidesModel> = [];\n        for (var i=0 ; i < this.driveRideList.length ; i++){\n            if (this.driveRideList[i][\"drive_ride_status\"] == 'ongoing') {\n                returnDriveRideList.push(this.driveRideList[i]);\n            }\n        }\n        return returnDriveRideList;\n    }\n\n    getSpecificInactivePassengerRides(pID:number){\n        let returnDriveRideList : Array<DriveRidesModel> = [];\n        \n        for (var i=0 ; i < this.driveRideList.length ; i++){\n            if (this.driveRideList[i][\"drive_ride_status\"] != 'ongoing'){\n                for (var j =0; j <  this.driveRideList[i].current_passengers_data.length;j++){\n                    if(this.driveRideList[i].current_passengers_data[j][\"id_user\"] == pID){\n                        returnDriveRideList.push(this.driveRideList[i])\n                    }\n                }\n            }\n        }\n        return returnDriveRideList;\n    }\n\n    addPassengerToDriveListIfThereIsFreeSpace(in_id_drive : number , in_id_pass : number ){\n        for (var i=0 ; i < this.driveRideList.length ; i++){\n            if (this.driveRideList[i][\"id_drive_rides\"] == in_id_drive){\n                if(this.driveRideList[i][\"current_passengers_number\"] < this.driveRideList[i][\"passengers_limit\"]){\n                    for (let elem in this.driveRideList[i][\"current_passengers_data\"]){\n                        if (this.driveRideList[i][\"current_passengers_data\"][elem].id_user == in_id_pass){\n                            return \"aleardy_exist\";\n                        }\n                      }\n                      this.driveRideList[i][\"current_passengers_data\"].push(\n                          {id_user : in_id_pass}\n                      );\n                      this.driveRideList[i][\"current_passengers_number\"] +=1;\n                      return \"success\";\n                } else {\n                    return \"full\";\n                }\n            }\n        }\n    }\n\n    isRequestAvailableForUniqueUser(in_id_drive : number , in_id_pass : number ){\n        console.log(\"in_id_pass \" + in_id_pass)\n        console.log(\"in_id_drive \" + in_id_drive)\n        for (var i=0 ; i < this.driveRideList.length ; i++){\n            if (this.driveRideList[i][\"id_drive_rides\"] == in_id_drive){\n                if(this.driveRideList[i][\"current_passengers_number\"] < this.driveRideList[i][\"passengers_limit\"]){\n                    for (let elem in this.driveRideList[i][\"current_passengers_data\"]){\n                        if (this.driveRideList[i][\"current_passengers_data\"][elem].id_user == in_id_pass){\n                            return \"aleardy_exist\";\n                        }\n                      }\n                      return \"success\";\n                } else {\n                    return \"full\";\n                }\n            }\n        }\n    }\n\n\n}","import { NotificationsModel } from './models/notifications.model';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class NotificationsService {\n    private notificationList : Array<NotificationsModel> = [\n        {\n            notification_id : 1,\n            id_passenger : 1,\n            id_driver   : 2,\n            type: 'request',\n            approved : false,\n            dismissed_by_driver: false,\n            ride_id: 1,\n        },\n        {\n            notification_id : 2,\n            id_passenger : 5,\n            id_driver   : 2,\n            type: 'request',\n            approved : false,\n            dismissed_by_driver: false,\n            ride_id: 3,\n        },\n        {\n            notification_id : 3,\n            id_passenger : 1,\n            id_driver   : 2,\n            type: 'ride_end',\n            ride_end_rated_driver : false,\n            ride_end_rated_passenger : false,\n            ride_id: 1,\n        }\n    ];\n    // ------------------------------------------------------------------------------------\n    setNewRequest(in_id_pass : number, in_id_driver : number, ride_id: number){\n    const newID =  this.notificationList[this.notificationList.length - 1].notification_id + 1;\n       this.notificationList.push(\n            {\n                ride_id : ride_id,\n                notification_id : newID,\n                id_passenger : in_id_pass,\n                id_driver   : in_id_driver,\n                type: 'request',\n                approved : false,\n                dismissed_by_driver: false\n            }\n        )\n    }\n    // ------------------------------------------------------------------------------------\n    setNewDriveEnd(in_id_pass : number, in_id_driver : number, ride_id: number){\n        const newID =  this.notificationList[this.notificationList.length - 1].notification_id + 1;\n        this.notificationList.push(\n             {\n                ride_id : ride_id,\n                 notification_id : newID,\n                 id_passenger : in_id_pass,\n                 id_driver   : in_id_driver,\n                 type: 'ride_end',\n                 ride_end_rated_driver : false,\n                 ride_end_rated_passenger : false,\n             }\n         )\n     }\n\n\n     // ------------------------------------------------------------------------------------\n     setRequestApprovedTrue(notiID:number){ //approve = true\n        for (var i=0 ; i < this.notificationList.length ; i++){\n            if(this.notificationList[i][\"notification_id\"] == notiID){\n                this.notificationList[i][\"approved\"] = true;\n            }\n        }        \n     }\n     // ------------------------------------------------------------------------------------\n     setDissmissedTrue(notiID:number){ //dismissed_by_driver = true\n        for (var i=0 ; i < this.notificationList.length ; i++){\n            if(this.notificationList[i][\"notification_id\"] == notiID){\n                this.notificationList[i][\"dismissed_by_driver\"] = true;\n            }\n        }\n    }\n     \n    // ------------------------------------------------------------------------------------\n    getNotificationsForSpecificUserRequest(in_id:number){\n        let returnList  : Array<NotificationsModel> = [];\n        for (var i=0 ; i < this.notificationList.length ; i++){\n            if(this.notificationList[i][\"type\"] == \"request\"){\n                if (this.notificationList[i][\"id_passenger\"] == in_id) {\n                    returnList.push(this.notificationList[i]);\n                }\n            }\n        }\n        return returnList;\n   }\n\n   getNotificationsForSpecificDriverRequest(in_id : number){\n    let returnList  : Array<NotificationsModel> = [];\n    for (var i=0 ; i < this.notificationList.length ; i++){\n        if(this.notificationList[i][\"type\"] == \"request\"){\n            if (this.notificationList[i][\"id_driver\"] == in_id) {\n                if(!this.notificationList[i][\"dismissed_by_driver\"] && !this.notificationList[i][\"approved\"] )\n                returnList.push(this.notificationList[i]);\n            }\n        }\n    }\n    return returnList;\n   }\n\n   getNotificationsForSpecificUserEndedRides(in_id:number){\n    let returnList  : Array<NotificationsModel> = [];\n    for (var i=0 ; i < this.notificationList.length ; i++){\n        if(this.notificationList[i][\"type\"] == \"ride_end\"){\n            if (this.notificationList[i][\"id_passenger\"] == in_id && this.notificationList[i][\"ride_end_rated_passenger\"] == false ) {\n                returnList.push(this.notificationList[i]);\n            }else\n            if (this.notificationList[i][\"id_driver\"] == in_id && this.notificationList[i][\"ride_end_rated_driver\"] == false  ){\n                returnList.push(this.notificationList[i]);\n            }\n        }\n    }\n    return returnList;\n   }\n\n   setRideEndRatedDriver(id:number){\n    for (var i=0 ; i < this.notificationList.length ; i++){\n        if(this.notificationList[i][\"notification_id\"] == id){\n            this.notificationList[i][\"ride_end_rated_driver\"] = true;\n        }\n    }\n   }\n\n   setRideEndRatedPassenger(id:number){\n    for (var i=0 ; i < this.notificationList.length ; i++){\n        if(this.notificationList[i][\"notification_id\"] == id){\n            this.notificationList[i][\"ride_end_rated_passenger\"] = true;\n            }\n        }\n   }\n\n   getPassengerIdFromNotification(in_id : number){\n    for (var i=0 ; i < this.notificationList.length ; i++){\n        if(this.notificationList[i][\"notification_id\"] == in_id){\n            return this.notificationList[i][\"id_passenger\"];\n            }\n        }\n    }\n    \n    getRideIDFromNotification(in_id : number){\n        for (var i=0 ; i < this.notificationList.length ; i++){\n            if(this.notificationList[i][\"notification_id\"] == in_id){\n                return this.notificationList[i][\"ride_id\"];\n                }\n            }\n        }\n}","import { ReputationModel } from './models/reputation.model';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class ReputationService {\n    private repList : Array<ReputationModel> = [\n        {\n            id_reputation   : 1,\n            id_user         : 1,\n            rep_positive    : 4,\n            rep_negative    : 0,\n            rep_comment     : [{\n                    id_user_from: 2,\n                    comment: \"great ride!\"\n                }, {\n                    id_user_from: 3,\n                    comment: \"bad ride!\"\n                }],\n        },\n        {\n            id_reputation   : 2,\n            id_user         : 2,\n            rep_positive    : 1,\n            rep_negative    : 2,\n            rep_comment     : [{\n                id_user_from: 1,\n                comment: \"awesome ride!\"\n            }, {\n                id_user_from: 3,\n                comment: \"great!\"\n            }],\n        },\n        {\n            id_reputation   : 3,\n            id_user         : 3,\n            rep_positive    : 0,\n            rep_negative    : 0,\n            rep_comment     : [],\n        },\n        {\n            id_reputation   : 4,\n            id_user         : 4,\n            rep_positive    : 0,\n            rep_negative    : 0,\n            rep_comment     : [],\n        },\n        {\n            id_reputation   : 5,\n            id_user         : 5,\n            rep_positive    : 0,\n            rep_negative    : 0,\n            rep_comment     : [],\n        }\n    ]\n\n\n    getReputationOfOneUser(id_user : number){\n        for (var i=0 ; i < this.repList.length ; i++){\n                if (this.repList[i][\"id_user\"] == id_user) {\n                    return this.repList[i];\n                }\n        }\n    }\n    initReputation(id_user : number){\n        const newID =  this.repList[this.repList.length - 1].id_reputation + 1;\n        this.repList.push({\n            id_reputation   : newID,\n            id_user         : id_user,\n            rep_positive    : 0,\n            rep_negative    : 0,\n            rep_comment     : [],\n        })\n    }\n\n    addPositive(id: number){\n         for (var i=0 ; i < this.repList.length ; i++){\n                if (this.repList[i][\"id_user\"] == id) {\n                    this.repList[i][\"rep_positive\"] = this.repList[i][\"rep_positive\"] + 1;\n                }\n        }\n    }\n    \n    setNegative(id: number){\n        for (var i=0 ; i < this.repList.length ; i++){\n                 if (this.repList[i][\"id_user\"] == id) {\n                     this.repList[i][\"rep_negative\"] = this.repList[i][\"rep_positive\"] + 1;\n                 }\n         }        \n    }\n\n    setNewComment(id:number,id_from:number, comment:string){\n        for (var i=0 ; i < this.repList.length ; i++){\n                 if (this.repList[i][\"id_user\"] == id) {\n                     this.repList[i][\"rep_comment\"].push(\n                         {\n                            id_user_from: id_from,\n                            comment: comment\n                         }\n                     );\n                 }\n         }\n    }\n}","import { UsersModel } from './models/user.model';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class UsersService {\n    private current_session : UsersModel = {             // empty because at first USER is not Logged IN! \n        id_user         : -1,       // later we are going to use this to put current logged in user\n        fname           : \"\",       // to simulate the SESSION on the backend\n        lname           : \"\",\n        contact_email   : \"\",\n        contact_phone   : \"\",\n        contact_address : \"\",\n        password        : \"\",\n        acc_type        : 'passenger'\n    }\n    /// setting userList---------------------------------------------------------------------------------\n    private userList : Array<UsersModel> = [\n        {\n            id_user         : 1,\n            fname           : \"Jeremiah\",\n            lname           : \"Riley\",\n            contact_email   : \"jeremiah@example.com\",\n            contact_phone   : \"0123456789\",\n            contact_address : \"2014 Public Works Drive Chattanooga, TN 37421\",\n            password        : \"secret\",\n            acc_type        : 'passenger'\n        } , \n        {\n            id_user         : 2,\n            fname           : \"Pam\",\n            lname           : \"Smith\",\n            contact_email   : \"pam.pSmith@example.com\",\n            contact_phone   : \"0123456789\",\n            contact_address : \"3246 Boring Lane Inverness, CA 94937\",\n            password        : \"secret\",\n            acc_type        : 'driver'\n        } , \n        {\n            id_user         : 3,\n            fname           : \"John\",\n            lname           : \"Dusek\",\n            contact_email   : \"johnn@example.com\",\n            contact_phone   : \"0123456789\",\n            contact_address : \"3762 Briarwood Drive Camden, NJ 08102\",\n            password        : \"secret\",\n            acc_type        : 'passenger'\n        } , \n        {\n            id_user         : 4,\n            fname           : \"Jared\",\n            lname           : \"Leighton\",\n            contact_email   : \"jaredd@example.com\",\n            contact_phone   : \"0123456789\",\n            contact_address : \"60 Pheasant Ridge Road Philadelphia, PA 19103\",\n            password        : \"secret\",\n            acc_type        : 'driver'\n        } , \n        {\n            id_user         : 5,\n            fname           : \"Ingrid\",\n            lname           : \"Monsen\",\n            contact_email   : \"imonsen@example.com\",\n            contact_phone   : \"0123456789\",\n            contact_address : \"Serenade Opus 108 9700 Volkegem\",\n            password        : \"secret\",\n            acc_type        : 'passenger'\n        } , \n    ]\n    /// end userList---------------------------------------------------------------------------------\n    //---------------------------------- getuserList -------------------------------------------------\n    getuserList() {\n        return this.userList;\n    }\n    //---------------------------------- getCurrenSession ----------------------------------------------\n    getCurrenSession(){\n        return this.current_session;\n    }\n    setCurrenSession(current_session_in : UsersModel){\n        this.current_session = current_session_in;\n    }\n    //---------------------------------- getProfileData -------------------------------------------------\n    getProfileData(id_user : number){\n        for (var i=0 ; i < this.userList.length ; i++){\n                if (this.userList[i][\"id_user\"] == id_user) {\n                    return this.userList[i];\n                }\n            }\n        // TODO return reputation and comments as well\n    }\n    //---------------------------------- setUser --------------------------------------------------------\n    addUser(\n        in_fname:string,\n        in_lname:string,\n        in_contact_email:string,\n        in_contact_phone:string,\n        in_contact_address:string,\n        in_password:string,\n        in_acc_type:string,){            \n            const newID =  this.userList[this.userList.length - 1].id_user + 1;\n            this.userList.push({\n                id_user         : newID,\n                fname           : in_fname,\n                lname           : in_lname,\n                contact_email   : in_contact_email,\n                contact_phone   : in_contact_phone,\n                contact_address : in_contact_address,\n                password        : in_password,\n                acc_type        : in_acc_type == 'driver'? 'driver' : 'passenger'\n            }); // end push;\n            return newID;\n        } //end setUser;\n    //---------------------------------- doesEmailExists ------------------------------------------\n    doesEmailExists(email_in:string){\n        for (var i=0 ; i < this.userList.length ; i++){\n                if (this.userList[i][\"contact_email\"] == email_in) {\n                    return true;\n                }\n        }\n        return false;\n    }\n    //---------------------------------- validateLogin ----------------------------------------------\n    validateLogin(email_in:string, pwd_in : string) {\n        for (var i=0 ; i < this.userList.length ; i++){\n            if (this.userList[i][\"contact_email\"] == email_in && this.userList[i][\"password\"] == pwd_in  ) {\n                this.setCurrenSession(this.userList[i]);\n                return true;\n            }\n        }\n        return false;\n    } // validateLogin end;\n    //---------------------------------- updateUser ----------------------------------------------\n    updateUser(in_model:UsersModel) {\n        for (var i=0 ; i < this.userList.length ; i++){\n                if (this.userList[i][\"id_user\"] == in_model.id_user) {\n                    this.userList[i] = in_model;\n                }\n        }\n    }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}